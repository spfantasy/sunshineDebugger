[
  {
    value: 'inputNode1',
    label: '输入1',
    type: 'input',
    inDegree: null,
    circuitBreaker: false,
    parents: [],
    inference: {
      retrievers: [
        {
          datasource: 'xxxxdb',
          query: "SELECT CAST(id AS CHAR) AS value, CONCAT('标签', string_field) AS label FROM my_table",
          sink: [
            {
              if: null,
              statement: 'ctx.inputNode1.selection = ctx.inputNode1.queryResult?.[0]?.value',
            },
            {
              if: '1 === 1',
              statement: 'ctx.inputNode1.choices = ctx.inputNode1.queryResult',
            },
          ],
        },
      ],
      component: {},
      success: 'ctx.inputNode1.selection != null',
    },
  },
  {
    value: 'inputNode2',
    label: '输入2',
    type: 'input',
    inDegree: null,
    circuitBreaker: false,
    parents: [
      'inputNode1',
    ],
    inference: {
      retrievers: [
        {
          datasource: 'xxxxdb',
          query: 'SELECT CAST(id AS CHAR) AS value, value AS label FROM my_table2 WHERE `key` = ?',
          sink: [
            {
              if: null,
              statement: 'ctx.inputNode2.selection = ctx.inputNode2?.queryResult?.[0]?.value',
            },
            {
              if: 'ctx.inputNode2.selection === ctx.inputNode2.selection',
              statement: 'ctx.inputNode2.choices = ctx.inputNode2.queryResult',
            },
          ],
          queryParams: [
            'ctx.inputNode1.selection',
          ],
        },
      ],
      component: {},
      success: 'ctx.inputNode2.selection != null',
    },
  },
  {
    value: 'outputModule1',
    label: '输出1',
    type: 'output',
    inDegree: null,
    circuitBreaker: true,
    parents: [
      'inputNode1',
    ],
    inference: {
      retrievers: [
        {
          datasource: 'xxxxdb',
          query: 'SELECT attr1, attr2 FROM my_table WHERE `id` = ?',
          sink: [
            {
              if: null,
              statement: 'ctx.outputModule1.data = ctx.outputModule1.queryResult?.[0]',
            },
            {
              if: '1 === 2',
              statement: 'ctx.outputModule1.abstract = `${ctx.outputModule1?.data?.attr1}|${ctx.outputModule1?.data?.attr2}`',
            },
          ],
          queryParams: [
            'BigInt(ctx.inputNode1.selection)',
          ],
        },
      ],
      component: {
        type: 'div',
        children: [
          {
            type: 'Row',
            children: [
              {
                type: 'Col',
                span: '12',
                innerHTML: '`123:${ctx.outputModule1?.data?.attr1}`',
              },
              {
                type: 'Col',
                span: '12',
                innerHTML: '`456:${ctx.outputModule1?.data?.attr2}`',
              },
            ],
          },
          {
            type: 'Row',
            children: [
              {
                type: 'Col',
                span: '24',
                innerHTML: '789',
              },
            ],
          },
        ],
      },
      success: '1 === 3',
    },
  },
  {
    value: 'outputModule2',
    label: '输出2',
    type: 'output',
    inDegree: 2,
    circuitBreaker: true,
    parents: [
      'inputNode2',
      'outputModule1',
    ],
    inference: {
      retrievers: [
        {
          datasource: 'xxxxdb',
          query: 'SELECT attr1, attr2 FROM my_table WHERE `id` = ?',
          sink: [
            {
              if: null,
              statement: 'ctx.outputModule2.data = ctx.outputModule2.queryResult?.[0]',
            },
            {
              if: null,
              statement: "ctx.outputModule2.abstract = 'x!!'",
            },
          ],
          queryParams: [
            'BigInt(ctx.inputNode1.selection)',
          ],
        },
      ],
      component: {
        type: 'div',
        children: [
          {
            type: 'Row',
            children: [
              {
                type: 'Col',
                span: '12',
                innerHTML: '`123:${ctx.outputModule2?.data?.attr1}`',
              },
              {
                type: 'Col',
                span: '12',
                innerHTML: '`456:${ctx.outputModule2?.data?.attr2}`',
              },
            ],
          },
          {
            type: 'Row',
            children: [
              {
                type: 'Col',
                span: '24',
                innerHTML: '789',
              },
            ],
          },
        ],
      },
      success: null,
    },
  },
]